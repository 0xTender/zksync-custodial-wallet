generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  address  String @unique @db.VarChar(64)
  username String @default("") @db.VarChar(64)

  paymasters Paymaster[]
}

model Access {
  id        Int    @id @default(autoincrement())
  apiSecret String @db.VarChar(128)
  apiKey    String @db.VarChar(128)

  paymaster   Paymaster @relation(fields: [paymasterId], references: [id])
  paymasterId Int
}

model Paymaster {
  id      Int   @id @default(autoincrement())
  Owner   User? @relation(fields: [ownerId], references: [id])
  ownerId Int?

  name    String @db.VarChar(64)
  address String @unique @db.VarChar(64)
  chainId Int

  Contracts Contract[]
  Access    Access[]
}

model Contract {
  id               Int               @id @default(autoincrement())
  paymaster        Paymaster         @relation(fields: [paymasterId], references: [id])
  paymasterId      Int
  AllowedFunctions AllowedFunction[]

  @@map("Contracts")
}

model AllowedFunction {
  id          Int      @id @default(autoincrement())
  contract    Contract @relation(fields: [contractsId], references: [id])
  contractsId Int

  @@map("AllowedFunctions")
}

model Contract_pm {
  id Int @id @default(autoincrement())

  name String

  address         String
  chainId         Int
  transactionHash String

  abiPath String

  initBlock        Int
  indexedTillBlock Int

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Event_pm  Event_pm[]
}

model Event_pm {
  id          String      @id
  Contract_pm Contract_pm @relation(fields: [ContractId], references: [id])
  ContractId  Int

  block           Int
  transactionHash String
  logIndex        Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  E_CreatePaymaster_Registry_Testnet E_CreatePaymaster_Registry_Testnet[]

  E_OwnershipTransferred_Registry_Testnet E_OwnershipTransferred_Registry_Testnet[]
}

model E_CreatePaymaster_Registry_Testnet {
  id       Int      @id @default(autoincrement())
  Event_pm Event_pm @relation(fields: [eventId], references: [id])
  eventId  String   @unique

  A_from String @db.VarChar(1000)

  A_paymaster String @db.VarChar(1000)

  A_limit_per_user String @db.VarChar(1000)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model E_OwnershipTransferred_Registry_Testnet {
  id       Int      @id @default(autoincrement())
  Event_pm Event_pm @relation(fields: [eventId], references: [id])
  eventId  String   @unique

  A_previousOwner String @db.VarChar(1000)

  A_newOwner String @db.VarChar(1000)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
